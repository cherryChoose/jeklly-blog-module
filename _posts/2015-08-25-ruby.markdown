---
layout: post
title:  " map、each、select、inject、collect 、detect reference!"
date:   2014-08-25 16:00:09
categories: ruby
tags: ruby
---
map：
    (collect是map的别名函数)
    对数组中每个元素进行表达式操作，原始数组不会被改变，返回执行表达式结果的新数组
    {% highlight ruby %}
    [1,2,3,4,5,6,7,8,9,10].map{|e| e*3}
    #=> prints [3, 6, 9, 12, 15, 18, 21, 24, 27, 30] to STDOUT
[1,2,3,4,5,6,7,8,9,10].collect{|e| e == 3}
    #=> prints [false, false, true, false, false, false, false, false, false, false] TO STDOUT
    {% endhighlight %}
each：
    常用作数组的循环操作，对循环的参数做表达式操作，原数组不会被改变，返回原始数组
    {% highlight ruby %}
    [1,2,3,4,5,6,7,8,9,10].each{|e| print e.to_s + "###"}
    #=> prints 1###2###3###4###5###6###7###8###9###10### to STDOUT
    {%endhighlight%}
select：
    相当于过滤器，返回符合表达式 元素的新数组，如果所有都不符合表达式则返回空数组
    {% highlight ruby %}
    [1,2,3,4,5,6,7,8,9,10].select{|e| e == 3}
    #=> prints [3] to STDOUT
[1,2,3,4,5,6,7,8,9,10].select{|e| e*3}
    #=> prints [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] to STDOUT
    {%endhighlight%}
detect：（find的别名函数）
    返回列表中第一个符合条件的元素
    {% highlight ruby %}
    [1,2,3,4,5,6,7,8,9,10].detect{|e| e == 3 || e == 2}
    #=> print 2
    {%endhighlight%}
inject:
  在所声明的容器中注入符合条件的元素，累加器作用
    {% highlight ruby%}
    [1,2,3,4,5,6,7,8,9,10].inject{ |sum,elem| sum += elem }
    #=> 注释：其中sum为所声明的注入器 将累加后的结果最后注入到sum中并返回注入器最后结果
    #=> print 55  解释：此时inject没有带参数，这是result会为数组中第一个元素，elem为第二个元素，依次累加返回最后结果
{1 => 'a',2 => 'b',3 =>'c'}.inject({}){|key,value| value}
    #=> [3,'c']
    {% endhighlight %}
reject:
 去除列表中符合条件的元素
 {% highlight ruby %}
   [1,2,3,4,5,6,7,8,9,10].reject{|e| e==2 || e==8}
   #=> [1, 3, 4, 5, 6, 7, 9, 10]
 {%endhighlight%}

Check out the [Jekyll docs][jekyll] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll’s dedicated Help repository][jekyll-help].

[jekyll]:      http://jekyllrb.com
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-help]: https://github.com/jekyll/jekyll-help
